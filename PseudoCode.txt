Semi brute/smart aproach

INIT park[8][8] - [row][seq] = empty, restricted, tree
			
def solve(r, restricted_cells):

	second = 0;
	for first in range(6):
		if first not in restricted_cells:		
			restricted_cells_new = [];
			park[r][first] = 'tree'
			restricted_cells_new.append( getAdj(park[r][first]) )
		else:
			continue
		
		for second in range(first+2, 8):
			if second not in restricted_cells:
				park[r][second] = 'tree'
				restricted_cells_new.append( getAdj(park[r][second]) )
				return solve(r+1,restricted_cells_new)
			else:
				continue
				
		return true
			